OPTION EXPLICIT

HEADER

	DEFINE INITIAL												0
	DEFINE MAINTENANCE_UNACTUATED								1
	DEFINE MAINTENANCE_ACTUATED									2
	DEFINE MAINTENANCE_ACTUATING_FORWARD						3
	DEFINE MAINTENANCE_ACTUATING_BACKWARD						4
	DEFINE EXPERIMENT_UNACTUATED								5
	DEFINE EXPERIMENT_ACTUATING									6
	DEFINE MAINTENANCE_ACTUATED_TO_EXPERIMENT_UNACTUATED		7
	DEFINE MAINTENANCE_UNACTUATED_TO_EXPERIMENT_UNACTUATED		8
	DEFINE EXPERIMENT_UNACTUATED_TO_MAINTENANCE_UNACTUATED		9
	
	DEFINE PORT_IN 1
	DEFINE PIN_MODE_SWITCH			0
	DEFINE PIN_MODE_TRIGGER			1
	DEFINE PIN_PARA_INPUT			2
	
	DEFINE PORT_OUT 1
	DEFINE POUT_PARA_SWITCH				0
	DEFINE POUT_LAMP					1
	DEFINE POUT_RELAY					2
	DEFINE POUT_DISP_CLK_SHIFT			3
	DEFINE POUT_DISP_CLK_REFRESH		4
	DEFINE POUT_DISP_CLEAR_N			5
	DEFINE POUT_DISP_SERIAL1			6
	DEFINE POUT_DISP_SERIAL2			7
	
	DEFINE SWITCH_MAINTENANCE		1	
	DEFINE SWITCH_EXPERIMENT		0

END HEADER



DECLARATIONS
	GLOBAL state AS INTEGER = INITIAL
	GLOBAL state_next AS INTEGER = INITIAL
	
	GLOBAL trigger_curr AS INTEGER = 1
	GLOBAL trigger_prev AS INTEGER = 1
	
	GLOBAL error_count AS INTEGER = 0
END DECLARATIONS



PROGRAM

	ONTASKERROR error_handler
	SETJMP

	WHILE 1
		IF state == INITIAL THEN
			IF !(AXISSTATUS() & 0x01) THEN
				ENABLE
			END IF
			
			IF !(AXISSTATUS() & 0x02) THEN
				HOME
			END IF
			
			' TODO: Define relay behavior
			MOVEABS D 0 F 50
			WAIT INPOS
			
			IF DIN(PORT_OUT, PIN_MODE_SWITCH) == SWITCH_MAINTENANCE THEN
				state_next = MAINTENANCE_UNACTUATED
			ELSE
				state_next = EXPERIMENT_UNACTUATED
			END IF
		
		ELSEIF state == MAINTENANCE_UNACTUATED THEN
			IF DIN(PORT_OUT, PIN_MODE_SWITCH) == SWITCH_EXPERIMENT THEN
				state_next = EXPERIMENT_UNACTUATED
			ELSE
				trigger_prev = trigger_curr
				trigger_curr = DIN(PORT_OUT, PIN_MODE_TRIGGER)
				
				IF trigger_prev == 0 && trigger_curr == 1 THEN
					state_next = MAINTENANCE_ACTUATED
					
					' TODO: Define relay behavior
					MOVEABS D 70 F 10
					WAIT INPOS
				END IF
			END IF
				
		ELSEIF state == MAINTENANCE_ACTUATED THEN
			IF DIN(PORT_OUT, PIN_MODE_SWITCH) == SWITCH_EXPERIMENT THEN
				state_next = EXPERIMENT_UNACTUATED
				
				' TODO: Define relay behavior
				MOVEABS D 0 F 10
				WAIT INPOS
			ELSE
				trigger_prev = trigger_curr
				trigger_curr = DIN(PORT_OUT, PIN_MODE_TRIGGER)
				
				IF trigger_prev == 0 && trigger_curr == 1 THEN
					state_next = MAINTENANCE_UNACTUATED
					
					' TODO: Define relay behavior
					MOVEABS D 0 F 10
					WAIT INPOS
				END IF
			END IF
			
		ELSEIF state == EXPERIMENT_UNACTUATED THEN
			IF DIN(PORT_OUT, PIN_MODE_SWITCH) == SWITCH_MAINTENANCE THEN
				state_next = MAINTENANCE_UNACTUATED
			ELSE
				' TODO: Pull and push smoke
			END IF
			
		ELSE
			state == INITIAL
		END IF
		
		DWELL 0.005
		state = state_next

	WEND
	
END PROGRAM

FUNCTION error_handler()
	state = INITIAL
	state_next = INITIAL
	
	error_count = error_count + 1
	
	IF AXISFAULT() != 0 THEN
        FAULTACK
    END IF

	LONGJMP	
END FUNCTION